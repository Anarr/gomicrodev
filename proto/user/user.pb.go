// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user/user.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AllRequest struct {
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllRequest) Reset()         { *m = AllRequest{} }
func (m *AllRequest) String() string { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()    {}
func (*AllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{0}
}

func (m *AllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllRequest.Unmarshal(m, b)
}
func (m *AllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllRequest.Marshal(b, m, deterministic)
}
func (m *AllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRequest.Merge(m, src)
}
func (m *AllRequest) XXX_Size() int {
	return xxx_messageInfo_AllRequest.Size(m)
}
func (m *AllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllRequest proto.InternalMessageInfo

func (m *AllRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UploadRequest struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{1}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type GetUserRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{2}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ProfilePic           string   `protobuf:"bytes,4,opt,name=profile_pic,json=profilePic,proto3" json:"profile_pic,omitempty"`
	IsFollowing          uint32   `protobuf:"varint,5,opt,name=is_following,json=isFollowing,proto3" json:"is_following,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetProfilePic() string {
	if m != nil {
		return m.ProfilePic
	}
	return ""
}

func (m *User) GetIsFollowing() uint32 {
	if m != nil {
		return m.IsFollowing
	}
	return 0
}

type AllResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllResponse) Reset()         { *m = AllResponse{} }
func (m *AllResponse) String() string { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()    {}
func (*AllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{4}
}

func (m *AllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllResponse.Unmarshal(m, b)
}
func (m *AllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllResponse.Marshal(b, m, deterministic)
}
func (m *AllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllResponse.Merge(m, src)
}
func (m *AllResponse) XXX_Size() int {
	return xxx_messageInfo_AllResponse.Size(m)
}
func (m *AllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllResponse proto.InternalMessageInfo

func (m *AllResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*AllRequest)(nil), "user.AllRequest")
	proto.RegisterType((*UploadRequest)(nil), "user.UploadRequest")
	proto.RegisterType((*GetUserRequest)(nil), "user.GetUserRequest")
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*AllResponse)(nil), "user.AllResponse")
}

func init() {
	proto.RegisterFile("proto/user/user.proto", fileDescriptor_9b283a848145d6b7)
}

var fileDescriptor_9b283a848145d6b7 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4e, 0xbb, 0x40,
	0x10, 0xc6, 0xb3, 0x40, 0x9b, 0xff, 0x7f, 0xa0, 0x8d, 0x8e, 0x9a, 0x10, 0x2e, 0x22, 0x1e, 0x44,
	0x0f, 0x6d, 0x52, 0x9f, 0xa0, 0x17, 0x7b, 0x35, 0x98, 0x9e, 0x9b, 0x0a, 0x53, 0xb3, 0xc9, 0xca,
	0x02, 0x4b, 0xf5, 0x1d, 0x4c, 0x7c, 0x67, 0xb3, 0x03, 0x28, 0x7a, 0x21, 0x33, 0xdf, 0xef, 0xcb,
	0x0c, 0xf3, 0x2d, 0x5c, 0x54, 0x8d, 0x6e, 0xf5, 0xf2, 0x68, 0xa8, 0xe1, 0xcf, 0x82, 0x7b, 0xf4,
	0x6c, 0x9d, 0x44, 0x00, 0x6b, 0xa5, 0x32, 0xaa, 0x8f, 0x64, 0x5a, 0x0c, 0x40, 0xd4, 0xa1, 0x88,
	0x45, 0xfa, 0x3f, 0x13, 0x75, 0x72, 0x0d, 0xb3, 0x6d, 0xa5, 0xf4, 0xbe, 0x18, 0x30, 0x82, 0x77,
	0x90, 0x8a, 0xd8, 0x11, 0x64, 0x5c, 0x27, 0x31, 0xcc, 0x37, 0xd4, 0x6e, 0x0d, 0x35, 0x83, 0x6b,
	0x0e, 0x8e, 0x2c, 0xd8, 0xe3, 0x66, 0x8e, 0x2c, 0x92, 0x0f, 0x01, 0x9e, 0xe5, 0x7f, 0x81, 0x1d,
	0x57, 0xee, 0x5f, 0x29, 0x74, 0x78, 0x21, 0xd7, 0x18, 0xc1, 0x3f, 0xfb, 0x5f, 0xac, 0xbb, 0xac,
	0x7f, 0xf7, 0x78, 0x09, 0x7e, 0xd5, 0x68, 0xbb, 0x75, 0x57, 0xc9, 0x3c, 0xf4, 0x18, 0x43, 0x2f,
	0x3d, 0xca, 0x1c, 0xaf, 0x20, 0x90, 0x66, 0x77, 0xd0, 0x4a, 0xe9, 0x77, 0x59, 0xbe, 0x84, 0x93,
	0x58, 0xa4, 0xb3, 0xcc, 0x97, 0xe6, 0x61, 0x90, 0x92, 0x25, 0xf8, 0x7c, 0xaf, 0xa9, 0x74, 0x69,
	0x08, 0x63, 0x98, 0xd8, 0xf1, 0x26, 0x14, 0xb1, 0x9b, 0xfa, 0x2b, 0x58, 0x70, 0x40, 0x7c, 0x4d,
	0x07, 0x56, 0x9f, 0x02, 0x7c, 0xdb, 0x3f, 0x51, 0xf3, 0x26, 0x73, 0xc2, 0x3b, 0x70, 0xd7, 0x4a,
	0xe1, 0x49, 0xe7, 0xfc, 0xc9, 0x2e, 0x3a, 0x1d, 0x29, 0xfd, 0xf4, 0x1b, 0x70, 0x37, 0xd4, 0xe2,
	0x79, 0x47, 0x7e, 0xc7, 0x14, 0x8d, 0x76, 0xe1, 0x2d, 0x4c, 0xbb, 0xa4, 0xf1, 0xac, 0x57, 0xc7,
	0xb9, 0x8f, 0xad, 0xcf, 0x53, 0x7e, 0xbd, 0xfb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x07,
	0xae, 0x07, 0xd6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserService service

type UserServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error)
	Get(ctx context.Context, in *GetUserRequest, opts ...client.CallOption) (*User, error)
	Upload(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*User, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.All", in)
	out := new(AllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *GetUserRequest, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Get", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Upload(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Upload", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	All(context.Context, *AllRequest, *AllResponse) error
	Get(context.Context, *GetUserRequest, *User) error
	Upload(context.Context, *UploadRequest, *User) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) All(ctx context.Context, in *AllRequest, out *AllResponse) error {
	return h.UserServiceHandler.All(ctx, in, out)
}

func (h *UserService) Get(ctx context.Context, in *GetUserRequest, out *User) error {
	return h.UserServiceHandler.Get(ctx, in, out)
}

func (h *UserService) Upload(ctx context.Context, in *UploadRequest, out *User) error {
	return h.UserServiceHandler.Upload(ctx, in, out)
}
